<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:CloudChat">

    <ResourceDictionary.MergedDictionaries>
        <!--Order is important-->
        <ResourceDictionary Source="Colors.xaml" />
        <ResourceDictionary Source="Fonts.xaml" />
        <ResourceDictionary Source="Texts.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <Style TargetType="{x:Type Button}" x:Key="Hoverless">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Padding="{TemplateBinding Padding}" Background="{TemplateBinding Background}">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type Button}" BasedOn="{StaticResource Hoverless}" x:Key="SystemIconButton">
        <Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True" />
        <Setter Property="Padding" Value="5" />
    </Style>

    <Style TargetType="{x:Type Button}" x:Key="ControlButtonStyle" BasedOn="{StaticResource Hoverless}">
        <Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="FontFamily" Value="{StaticResource Calibri Light}" />
        <Setter Property="Foreground" Value="{StaticResource WordDarkBlueBrush}" />
        <Setter Property="Width" Value="30" />
        <Setter Property="VerticalAlignment" Value="Stretch" />
        <Setter Property="HorizontalAlignment" Value="Stretch" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Padding="{TemplateBinding Padding}"
                            Background="{TemplateBinding Background}">
                        <ContentPresenter HorizontalAlignment="Center"
                                          VerticalAlignment="Center">
                            <ContentPresenter.Content>
                                <ContentControl  Foreground="{TemplateBinding Foreground}"
                                                 Content="{TemplateBinding Content}" />
                            </ContentPresenter.Content>
                        </ContentPresenter>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource ForegroundMainBrush}" />
                <Setter Property="Foreground" Value="{StaticResource ForegroundLightBrush}" />
            </Trigger>
        </Style.Triggers>
    </Style>
    
    <Style TargetType="{x:Type Button}" x:Key="CloseButtonStyle" BasedOn="{StaticResource ControlButtonStyle}">
        <Setter Property="Foreground" Value="{StaticResource WordRedBrush}"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="Red" />
                <Setter Property="Foreground" Value="White" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--Regular button-->
    <Style TargetType="{x:Type Button}" BasedOn="{StaticResource BaseStyle}">
        <Setter Property="Background" Value="{StaticResource OldMainColorBrush}" />
        <Setter Property="Foreground" Value="{StaticResource ForegroundLightBrush}" />
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="FontSize" Value="{StaticResource FontSizeLarge}" />
        <Setter Property="Padding" Value="40 5" />
        <Setter Property="local:IsBusyProperty.Value" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ButtonBase}">
                    <Grid>
                        <Border x:Name="border" 
                                CornerRadius="15"
                                BorderBrush="{TemplateBinding BorderBrush}" 
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Background="{TemplateBinding Background}" 
                                SnapsToDevicePixels="True"/>
                        
                        <Border x:Name="Mask"
                                Opacity="0"
                                CornerRadius="15"
                                SnapsToDevicePixels="True"
                                Background="{StaticResource ForegroundVeryDarkBrush}"/>
                        
                        <ContentPresenter x:Name="contentPresenter" 
                                          ContentTemplate="{TemplateBinding ContentTemplate}" 
                                          Content="{TemplateBinding Content}"
                                          ContentStringFormat="{TemplateBinding ContentStringFormat}" 
                                          Focusable="False" 
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                          Margin="{TemplateBinding Padding}" 
                                          RecognizesAccessKey="True" 
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          Visibility="{TemplateBinding local:IsBusyProperty.Value,Converter={local:BooleanToVisibilityConverterForHidden}}"/>
                        <!-- Spinneing Icon-->
                        <local:MainLoadingControl Visibility="{TemplateBinding local:IsBusyProperty.Value,Converter={local:BooleanToVisibilityConverterForHidden},ConverterParameter=True}"
                                                  Height="25"
                                                  Focusable="False"
                                                  SnapsToDevicePixels="True"
                                                  VerticalAlignment="Center"
                                                  HorizontalAlignment="Center"/>
                        <!--<TextBlock Style="{StaticResource SpinningImageStyle}"
                                   Visibility="{TemplateBinding local:IsBusyProperty.Value,Converter={local:BooleanToVisibilityConverterForHidden},ConverterParameter=True}"
                                   Focusable="False"
                                   Padding="{TemplateBinding Padding}"
                                   SnapsToDevicePixels="True"
                                   VerticalAlignment="Center"
                                   HorizontalAlignment="Center"/>-->
                    </Grid>
                    <ControlTemplate.Triggers>
                        <EventTrigger RoutedEvent="MouseEnter">
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation To="0.3" 
                                                    Storyboard.TargetName="Mask" 
                                                    Storyboard.TargetProperty="Opacity" 
                                                    Duration="0:0:0.150" />
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>

                        <EventTrigger RoutedEvent="MouseLeave">
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation To="0"
                                                    Storyboard.TargetName="Mask" 
                                                    Storyboard.TargetProperty="Opacity" 
                                                    Duration="0:0:0.150" />
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>

                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Background" TargetName="border" Value="{StaticResource ForegroundDarkBrush}" />
                        </Trigger>
                        
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
       
    </Style>
    
    <!-- Special Button -->
    <Style TargetType="{x:Type Button}" x:Key="SpecialButtonStyle"  BasedOn="{StaticResource BaseStyle}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Foreground" Value="{StaticResource ForegroundMainBrush}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Margin" Value="0" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ButtonBase}">
                    <Border x:Name="border"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Background="{TemplateBinding Background}"
                            SnapsToDevicePixels="True"
                            IsHitTestVisible="True"
                            RenderTransformOrigin=".5 .5">
                        <Border.RenderTransform>
                            <ScaleTransform/>
                        </Border.RenderTransform>

                        <ContentPresenter HorizontalAlignment="Center"
                                          VerticalAlignment="Center"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <EventTrigger RoutedEvent="MouseEnter">
                            <BeginStoryboard>
                                <Storyboard>
                                    <ColorAnimation To="{StaticResource ForegroundDark}" 
                                                    Storyboard.TargetProperty="Foreground.Color"
                                                    Duration="0:0:0.1" />
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>

                        <EventTrigger RoutedEvent="MouseLeave">
                            <BeginStoryboard>
                                <Storyboard>
                                    <ColorAnimation To="{StaticResource ForegroundMain}" 
                                                    Storyboard.TargetProperty="Foreground.Color"
                                                    Duration="0:0:0.1" />
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>

                        <EventTrigger RoutedEvent="MouseDown">
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation To="0.97" Duration="0:0:0.100" Storyboard.TargetName="border" Storyboard.TargetProperty="(RenderTransform).(ScaleTransform.ScaleX)" />
                                    <DoubleAnimation To="0.97" Duration="0:0:0.100" Storyboard.TargetName="border" Storyboard.TargetProperty="(RenderTransform).(ScaleTransform.ScaleY)" />
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>

                        <EventTrigger RoutedEvent="MouseUp">
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation To="1" Duration="0:0:0.100" Storyboard.TargetName="border" Storyboard.TargetProperty="(RenderTransform).(ScaleTransform.ScaleX)" />
                                    <DoubleAnimation To="1" Duration="0:0:0.100" Storyboard.TargetName="border" Storyboard.TargetProperty="(RenderTransform).(ScaleTransform.ScaleY)" />
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>

                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="{StaticResource ForegroundDarkBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--Send button-->
    <Style TargetType="{x:Type Button}" x:Key="SendButtonStyle" BasedOn="{StaticResource BaseStyle}">
        <Setter Property="Background" Value="{StaticResource OldMainColorBrush}" />
        <Setter Property="Foreground" Value="{StaticResource ForegroundLightBrush}" />
        <Setter Property="FontSize" Value="{StaticResource FontSizeRegular}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Margin" Value="0 5" />
        <Setter Property="Padding" Value="40 5" />
        <Setter Property="local:IsBusyProperty.Value" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Background="{TemplateBinding Background}"
                            SnapsToDevicePixels="True">
                        <Border.CornerRadius>
                            <CornerRadius BottomLeft="15" BottomRight="0" TopLeft="15" TopRight="15" />
                        </Border.CornerRadius>

                        <Grid>
                            <Border x:Name="borderDisabled" Background="{StaticResource ForegroundLightBrush}" Opacity="0.0">
                                <Border.CornerRadius>
                                    <CornerRadius BottomLeft="15" BottomRight="0" TopLeft="15" TopRight="15" />
                                </Border.CornerRadius>
                            </Border>
                            <Border x:Name="borderMouseEnter" Background="{StaticResource ThumbColorBrush}" Opacity="0.0">
                                <Border.CornerRadius>
                                    <CornerRadius BottomLeft="15" BottomRight="0" TopLeft="15" TopRight="15" />
                                </Border.CornerRadius>
                            </Border>

                            <Label Content="{TemplateBinding Content}"
                                   Focusable="False"
                                   x:Name="labelSend"
                                   HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                   Margin="{TemplateBinding Padding}"
                                   Foreground="{TemplateBinding Foreground}"
                                   SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                   VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                   Visibility="{TemplateBinding local:IsBusyProperty.Value,
                                                                Converter={local:BooleanToVisibilityConverterForHidden}}"
                                   RenderTransformOrigin="0.5 0.5">
                                <Label.RenderTransform>
                                    <ScaleTransform />
                                </Label.RenderTransform>
                            </Label>

                            <Label Content="Send"
                                Focusable="False"
                                x:Name="labelRecord"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                Margin="{TemplateBinding Padding}"
                                Foreground="{TemplateBinding Foreground}"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                   Visibility="{TemplateBinding local:IsBusyProperty.Value,
                                                             Converter={local:BooleanToVisibilityConverterForHidden},
                                                             ConverterParameter=True}"
                                RenderTransformOrigin="0.5 0.5">
                                <Label.RenderTransform>
                                    <ScaleTransform />
                                </Label.RenderTransform>
                            </Label>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>

                        <EventTrigger RoutedEvent="MouseEnter">
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation To="0.55" Storyboard.TargetName="borderMouseEnter" Storyboard.TargetProperty="Opacity" Duration="0:0:0.300" />
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>

                        <EventTrigger RoutedEvent="MouseLeave">
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation To="0" Storyboard.TargetName="borderMouseEnter" Storyboard.TargetProperty="Opacity" Duration="0:0:0.300" />
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>

                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" TargetName="borderDisabled" Value="0.8" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <!--Text button-->
    <Style TargetType="{x:Type Button}" x:Key="TextButtonStyle"  BasedOn="{StaticResource BaseStyle}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Foreground" Value="{StaticResource WordBlueBrush}" />
        <Setter Property="FontSize" Value="{StaticResource FontSizeRegular}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Margin" Value="0 10" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ButtonBase}">
                    <Border x:Name="border"
                            CornerRadius="10"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Background="{TemplateBinding Background}"
                            SnapsToDevicePixels="True">

                        <TextBlock Text="{TemplateBinding Content}"
                                   Focusable="False"
                                   HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                   Margin="{TemplateBinding Padding}"
                                   SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                   VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                    </Border>
                    <ControlTemplate.Triggers>

                        <EventTrigger RoutedEvent="MouseEnter">
                            <BeginStoryboard>
                                <Storyboard>
                                    <ColorAnimation To="{StaticResource WordLightBlue}" Storyboard.TargetProperty="Foreground.Color" Duration="0:0:0.150" />
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>

                        <EventTrigger RoutedEvent="MouseLeave">
                            <BeginStoryboard>
                                <Storyboard>
                                    <ColorAnimation To="{StaticResource WordBlue}" Storyboard.TargetProperty="Foreground.Color" Duration="0:0:0.150" />
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>

                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="{StaticResource ForegroundDarkBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Icon button Style -->
    <Style TargetType="{x:Type RadioButton}" x:Key="IconButtonStyle">
        <Setter Property="Foreground" Value="{StaticResource ForegroundMainBrush}"/>
        <Setter Property="Background" Value="{StaticResource ForegroundLightBrush}"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RadioButton}">
                    <Border x:Name="border"
                            Background="{TemplateBinding Background}"
                            SnapsToDevicePixels="True">
                        <ContentControl Foreground="{TemplateBinding Foreground}"
                                        x:Name="content"
                                        Background="{TemplateBinding Background}"
                                        Content="{TemplateBinding Content}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Foreground" Value="{StaticResource OldMainColorBrush}"/>
                        </Trigger>

                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Foreground" Value="{StaticResource WordDarkBlueBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <!--LightContentIconButton Style-->
    <Style x:Key="LightContentIconButtonStyle" TargetType="{x:Type Button}" BasedOn="{StaticResource BaseStyle}">
        <Setter Property="Background" Value = "{StaticResource ForegroundLightBrush}" />
        <Setter Property="Foreground" Value="{StaticResource MainBackgroundBrush}" />
        <Setter Property="FontSize" Value="{StaticResource FontSizeRegular}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Margin" Value="0" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="Width" Value="{Binding ActualHeight,RelativeSource={RelativeSource Self}}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Background="{TemplateBinding Background}"
                            SnapsToDevicePixels="True">
                        <Grid>
                            <Viewbox>
                                <Label
                                   Content="{TemplateBinding Content}"
                                   Focusable="False"
                                   HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                   Margin="{TemplateBinding Padding}"
                                   Foreground="{TemplateBinding Foreground}"
                                   SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                   VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                            </Viewbox>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>

                        <EventTrigger RoutedEvent="MouseEnter">
                            <BeginStoryboard>
                                <Storyboard>
                                    <ColorAnimation To="{StaticResource ForegroundMain}" Storyboard.TargetName="border" Storyboard.TargetProperty="Background.Color" Duration="0:0:0.300" />
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>

                        <EventTrigger RoutedEvent="MouseLeave">
                            <BeginStoryboard>
                                <Storyboard>
                                    <ColorAnimation To="{StaticResource ForegroundLight}" Storyboard.TargetName="border" Storyboard.TargetProperty="Background.Color" Duration="0:0:0.300" />
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>

                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Background" TargetName="border" Value="{StaticResource ForegroundMain}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--InputBoxIconButton Style-->
    <Style x:Key="InputBoxIconButtonStyle" TargetType="{x:Type Button}" BasedOn="{StaticResource BaseStyle}">
        <Setter Property="Background" Value = "Transparent" />
        <Setter Property="Foreground" Value="{StaticResource MainBackgroundLightBrush}" />
        <Setter Property="FontSize" Value="{StaticResource FontSizeRegular}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Margin" Value="0" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="Width" Value="{Binding ActualHeight,RelativeSource={RelativeSource Self}}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Background="{TemplateBinding Background}"
                            SnapsToDevicePixels="True"
                            RenderTransformOrigin="0.5 0.5">
                        <Border.RenderTransform>
                            <ScaleTransform />
                        </Border.RenderTransform>
                        <Grid>
                            <Label
                                   x:Name="label"
                                   Content="{TemplateBinding Content}"
                                   Focusable="False"
                                   HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                   Margin="{TemplateBinding Padding}"
                                   Foreground="{TemplateBinding Foreground}"
                                   SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                   VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                   RenderTransformOrigin="0.5 0.5">
                                <Label.RenderTransform>
                                    <RotateTransform />
                                </Label.RenderTransform>
                            </Label>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>

                        <EventTrigger RoutedEvent="MouseEnter">
                            <BeginStoryboard>
                                <Storyboard>
                                    <ColorAnimation To="{StaticResource MainBackground}" Storyboard.TargetProperty="Foreground.Color" Duration="0:0:0.300" />
                                    <DoubleAnimation Storyboard.TargetName="label"
                                                     Storyboard.TargetProperty="(UIElement.RenderTransform).(RotateTransform.Angle)"
                                                     From="0"
                                                     To="360"
                                                     Duration="0:0:0.300" />
                                    <DoubleAnimation To="1.15" Duration="0:0:0.300" Storyboard.TargetName="border" Storyboard.TargetProperty="(RenderTransform).(ScaleTransform.ScaleX)" />
                                    <DoubleAnimation To="1.15" Duration="0:0:0.300" Storyboard.TargetName="border" Storyboard.TargetProperty="(RenderTransform).(ScaleTransform.ScaleY)" />
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>

                        <EventTrigger RoutedEvent="MouseLeave">
                            <BeginStoryboard>
                                <Storyboard>
                                    <ColorAnimation To="{StaticResource MainBackgroundLight}" Storyboard.TargetProperty="Foreground.Color" Duration="0:0:0.300" />
                                    <DoubleAnimation To="1" Duration="0:0:0.200" Storyboard.TargetName="border" Storyboard.TargetProperty="(RenderTransform).(ScaleTransform.ScaleX)" />
                                    <DoubleAnimation To="1" Duration="0:0:0.200" Storyboard.TargetName="border" Storyboard.TargetProperty="(RenderTransform).(ScaleTransform.ScaleY)" />
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>

                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Background" TargetName="border" Value="{StaticResource ForegroundMain}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--ScalingIconRadioButton Style-->
    <Style x:Key="ScalingIconRadioButtonStyle" TargetType="{x:Type RadioButton}" BasedOn="{StaticResource BaseStyle}">
        <Setter Property="Background" Value = "Transparent" />
        <Setter Property="Foreground" Value="{StaticResource ForegroundMainBrush}" />
        <Setter Property="FontSize" Value="{StaticResource FontSizeRegular}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Margin" Value="0" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="Width" Value="{Binding ActualHeight,RelativeSource={RelativeSource Self}}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RadioButton}">
                    <Border x:Name="border"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Background="{TemplateBinding Background}"
                            SnapsToDevicePixels="True"
                            RenderTransformOrigin="0.5 0.5">
                        <Border.RenderTransform>
                            <ScaleTransform />
                        </Border.RenderTransform>
                        <Grid>
                            <ContentPresenter Focusable="False"
                                              Margin="{TemplateBinding Padding}"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}" >
                                <ContentPresenter.Content>
                                    <Viewbox>
                                        <ContentControl Foreground="{TemplateBinding Foreground}"
                                                        Content="{TemplateBinding Content}"/>
                                    </Viewbox>
                                </ContentPresenter.Content>
                            </ContentPresenter>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>

                        <EventTrigger RoutedEvent="MouseEnter">
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation To="1.2" Duration="0:0:0.150" Storyboard.TargetName="border" Storyboard.TargetProperty="(RenderTransform).(ScaleTransform.ScaleX)" />
                                    <DoubleAnimation To="1.2" Duration="0:0:0.150" Storyboard.TargetName="border" Storyboard.TargetProperty="(RenderTransform).(ScaleTransform.ScaleY)" />
                                    <ColorAnimation To="{StaticResource ForegroundDark}" Duration="0:0:0.150" Storyboard.TargetProperty="Foreground.Color" />
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>

                        <EventTrigger RoutedEvent="MouseLeave">
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation To="1" Duration="0:0:0.100" Storyboard.TargetName="border" Storyboard.TargetProperty="(RenderTransform).(ScaleTransform.ScaleX)" />
                                    <DoubleAnimation To="1" Duration="0:0:0.100" Storyboard.TargetName="border" Storyboard.TargetProperty="(RenderTransform).(ScaleTransform.ScaleY)" />
                                    <ColorAnimation To="{StaticResource ForegroundMain}" Duration="0:0:0.100" Storyboard.TargetProperty="Foreground.Color" />
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>

                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Background" Value="{StaticResource ForegroundMain}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--ScalingIconButton Style-->
    <Style x:Key="ScalingIconButtonStyle" TargetType="{x:Type Button}" BasedOn="{StaticResource BaseStyle}">
        <Setter Property="Background" Value = "Transparent" />
        <Setter Property="Foreground" Value="{StaticResource ForegroundMainBrush}" />
        <Setter Property="FontSize" Value="{StaticResource FontSizeRegular}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Margin" Value="0" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="Width" Value="{Binding ActualHeight,RelativeSource={RelativeSource Self}}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Background="{TemplateBinding Background}"
                            SnapsToDevicePixels="True"
                            RenderTransformOrigin="0.5 0.5">
                        <Border.RenderTransform>
                            <ScaleTransform />
                        </Border.RenderTransform>
                        <Grid>
                            <ContentPresenter Focusable="False"
                                              Margin="{TemplateBinding Padding}"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}" >
                                <ContentPresenter.Content>
                                    <Viewbox>
                                        <ContentControl Foreground="{TemplateBinding Foreground}"
                                                        Content="{TemplateBinding Content}"/>
                                    </Viewbox>
                                </ContentPresenter.Content>
                            </ContentPresenter>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>

                        <EventTrigger RoutedEvent="MouseEnter">
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation To="1.2" Duration="0:0:0.150" Storyboard.TargetName="border" Storyboard.TargetProperty="(RenderTransform).(ScaleTransform.ScaleX)" />
                                    <DoubleAnimation To="1.2" Duration="0:0:0.150" Storyboard.TargetName="border" Storyboard.TargetProperty="(RenderTransform).(ScaleTransform.ScaleY)" />
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>

                        <EventTrigger RoutedEvent="MouseLeave">
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation To="1" Duration="0:0:0.100" Storyboard.TargetName="border" Storyboard.TargetProperty="(RenderTransform).(ScaleTransform.ScaleX)" />
                                    <DoubleAnimation To="1" Duration="0:0:0.100" Storyboard.TargetName="border" Storyboard.TargetProperty="(RenderTransform).(ScaleTransform.ScaleY)" />
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>

                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Background" Value="{StaticResource ForegroundMain}" />
                        </Trigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>